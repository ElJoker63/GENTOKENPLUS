name: Desktop Build (Linux, macOS, Windows)

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - master
      - main
  # Runs on pull request events that target one of the below branches
  #pull_request:
  #  branches:
  #    - master
  #    - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  BUILD_NUMBER: 202411011
  BUILD_VERSION: 3.0.1
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.4
  APP_NAME: "GENTOKEN+"

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Patch for linux build
        run: |
          flutter doctor
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          flutter doctor

      - name: Flet Build Linux
        run: |
          flutter config --no-analytics 
          flet build linux --no-rich-output --product "${{ env.APP_NAME }}" --org "com.aewaredev" --build-number "${{ env.BUILD_NUMBER }}" --build-version "${{ env.BUILD_VERSION }}" --verbose

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: flet-linux
          path: build/linux
          if-no-files-found: warn
          overwrite: false

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flet Build macOS
        run: |
          flutter config --no-analytics
          flet build macos --no-rich-output --product "${{ env.APP_NAME }}" --org "com.aewaredev" --build-number "${{ env.BUILD_NUMBER }}" --build-version "${{ env.BUILD_VERSION }}" --verbose

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: flet-macos
          path: build/macos
          if-no-files-found: warn
          overwrite: false

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flet Build Windows
        run: |
          flutter config --no-analytics
          flet build windows --no-rich-output --product "${{ env.APP_NAME }}" --org "com.aewaredev" --build-number "${{ env.BUILD_NUMBER }}" --build-version "${{ env.BUILD_VERSION }}" --verbose

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: flet-windows
          path: build/windows
          if-no-files-found: warn
          overwrite: false

  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin' # See https://github.com/marketplace/actions/setup-java-jdk#supported-distributions for available options
        java-version: '21'

    - name: Flet Build APK ${{ env.APP_NAME }}
      run: |
        flutter config --no-analytics
        flet build apk --product "${{ env.APP_NAME }}" --org "com.aewaredev" --build-number "${{ env.BUILD_NUMBER }}" --build-version "${{ env.BUILD_VERSION }}" --verbose

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: apk-build-artifact
        path: build/apk
        if-no-files-found: error 
        overwrite: true

  create-release:
    needs: [build-linux, build-macos, build-windows, build-android]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} #GitHub Token
        with:
          tag_name: v${{ env.BUILD_VERSION }}
          release_name: Release v${{ env.BUILD_VERSION }}
          body: | 
            ## ðŸš€ Update ${{ env.BUILD_VERSION }}
          draft: false
          prerelease: false

      - name: Zip Artifacts
        run: |
          cd artifacts
          zip -r flet-linux.zip flet-linux/
          zip -r flet-macos.zip flet-macos/
          zip -r flet-windows.zip flet-windows/

      - name: List Workspace After Zipping
        run: |
          echo "Artifacts Directory After Zipping:"
          ls -la artifacts/

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/flet-linux.zip
            artifacts/flet-macos.zip
            artifacts/flet-windows.zip
            artifacts/app-release.apk

          tag_name: v${{ env.BUILD_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} #GitHub Token