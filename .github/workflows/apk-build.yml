name: APK Build

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - master
      - main
  # Runs on pull request events that target one of the below branches
  pull_request:
    branches:
      - master
      - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 202411311
  BUILD_VERSION: 3.0.1
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.4
  APP_NAME: "GENTOKEN+"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin' # See https://github.com/marketplace/actions/setup-java-jdk#supported-distributions for available options
        java-version: '21'

    - name: Delete Existing Release
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        release_id=$(curl -H "Authorization: token $GITHUB_TOKEN" \
        https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.BUILD_VERSION }} \
        | jq -r '.id')
        if [ "$release_id" != "null" ]; then
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/releases/$release_id
        fi

    - name: Flet Build APK ${{ env.APP_NAME }}
      run: |
        flutter config --no-analytics
        flet build apk --product ${{ env.APP_NAME }} --org "com.aewaredev" --build-number "${{ env.BUILD_NUMBER }}" --build-version "${{ env.BUILD_VERSION }}" --verbose

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4  # https://github.com/marketplace/actions/upload-a-build-artifact
      with:
        name: apk-build-artifact  # the name of the artifact
        path: build/apk  # location of Flet build output
        if-no-files-found: error  # Fail the action with an error message if no files are found
        overwrite: true  # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: v${{ env.BUILD_VERSION }}
        release_name: ${{ env.APP_NAME}} v${{ env.BUILD_VERSION }}
        body: |
          ## ðŸš€ Update ${{ env.BUILD_VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/zip